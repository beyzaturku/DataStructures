class BSTIterator {
    List<TreeNode> list = new ArrayList<TreeNode>();

    public BSTIterator(TreeNode root) {
        if(root != null){
            list.add(root);
        }
        while(list.size()>0){
            TreeNode node=list.get(list.size()-1);
            if(node.left!=null){
                list.add(node.left);
                node.left=null;
            }else{
                break;
            }
        }
    }
    
    public int next() {
        TreeNode test=list.get(list.size()-1);
        list.remove(list.size()-1);
        if(test.right!=null){
            list.add(test.right);
            while(true){
                TreeNode node=list.get(list.size()-1);
                if(node.left!=null){
                    list.add(node.left);
                    node.left=null;
                }else {
                    break;
                }
            }
        }
        return test.val;
    }
    
    public boolean hasNext() {
        return list.size()!=0;
    }
}
